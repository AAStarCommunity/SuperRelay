on:
  push:
    branches:
      - josh/*

name: ci
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install protobuf
        run: sudo apt-get install -y protobuf-compiler
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.0
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Run tests
        run: cargo test

  spec-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install protobuf
        run: sudo apt-get install -y protobuf-compiler
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.0
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM      
        with:
          python-version: 3.11.2 
          architecture: x64         
      - uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "./test/spec-tests/launchers/rundler-launcher/docker-compose.yml"
      # - name: run spec tests
      #   run: ./test/spec-tests/ci/run-spec-tests.sh

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install protobuf
        run: sudo apt-get install -y protobuf-compiler
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.0
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
      - name: Install toolchain (nightly)
        run: rustup toolchain add nightly --component rustfmt --profile minimal
        # Build to generate the ABI bindings.
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: cargo +nightly fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          toolchain: nightly
          args: --all --check
      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-features -- -D warnings
      - name: buf setup
        uses: bufbuild/buf-setup-action@v1
      - name: buf lint
        uses: bufbuild/buf-lint-action@v1
      # - name: buf breaking
      #   uses: bufbuild/buf-breaking-action@v1
      #   with:
      #     # The 'main' branch of the GitHub repository that defines the module.
      #     against: "https://github.com/${GITHUB_REPOSITORY}.git#branch=main"

  cog_check_job:
    runs-on: ubuntu-latest
    name: check conventional commit compliance
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # pick the pr HEAD instead of the merge commit
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Conventional commit check
        uses: cocogitto/cocogitto-action@v3
        with:
          check-latest-tag-only: true
